{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","App.tsx","components/TodoModal/TodoModal.tsx","index.tsx"],"names":["TodoList","todos","setButton","setTodo","listButton","setListButton","useState","localTodo","setLocalTodo","className","map","todo","id","completed","title","type","onClick","setVariables","TodoFilter","setCurrentCase","cases","setCurrentQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","SortType","getTodos","getUser","userId","TodoModal","name","email","phone","user","setUser","isLoading","setLoading","useEffect","a","fetchedData","getTodo","href","App","setTodos","setCase","setQuery","button","console","error","visibleTodos","useMemo","filter","element","All","toLowerCase","includes","trim","Active","length","Completed","currentCase","currentQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.049cbd08.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\nimport './todo.list.scss';\n\ninterface Props {\n  todos: Todo[];\n\n  setButton: (trueOrFalse: boolean) => (void),\n\n  setTodo: (obj: Todo) => (void),\n\n  setListButton: (trueOrFalse: boolean) => (void),\n\n  listButton: boolean,\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos = [],\n  setButton,\n  setTodo,\n  listButton,\n  setListButton,\n}) => {\n  const [localTodo, setLocalTodo] = useState('');\n\n  const setVariables = (todo: Todo, title: string) => {\n    setButton(true);\n    setTodo(todo);\n    setListButton(true);\n    setLocalTodo(title);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n            >\n              <td className=\"is-vcentered\">\n                {todo.id}\n              </td>\n              { todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : <td className=\"is-vcentered\" />}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setVariables(todo, todo.title);\n                  }}\n                >\n                  <span className=\"icon\">\n                    {listButton && localTodo === todo.title ? (\n                      <i className=\"far fa-signal\" />\n                    ) : (\n                      <i className=\"far fa-eye\" />\n                    )}\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  setCurrentCase: (tabId: string)=> void,\n  setCurrentQuery: (tabId: string)=> void,\n  cases: string,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setCurrentCase,\n  cases,\n  setCurrentQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={cases}\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setCurrentCase(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setCurrentQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setCurrentQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable no-console */\n/* eslint-disable max-len */\nimport React, { useEffect, useState, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nenum SortType {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setLoading] = useState(true);\n  const [cases, setCase] = useState('');\n  const [query, setQuery] = useState('');\n  const [button, setButton] = useState(false);\n  const [todo, setTodo] = useState(todos[0]);\n  const [listButton, setListButton] = useState(false);\n\n  useEffect(() => {\n    async function getTodo() {\n      try {\n        const fetchedData = await getTodos();\n\n        setTodos(fetchedData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error occurred:', error);\n        throw error;\n      }\n    }\n\n    getTodo();\n  }, []);\n\n  const setCurrentCase = (currentCase: string) => {\n    setCase(currentCase);\n  };\n\n  const setCurrentQuery = (currentQuery: string) => {\n    setQuery(currentQuery);\n  };\n\n  const visibleTodos: Todo[] = useMemo(\n    () => todos.filter((element) => {\n      switch (cases) {\n        case SortType.All:\n          return element.title.toLowerCase().includes(query.toLowerCase().trim());\n        case SortType.Active:\n          return (\n            query.length === 0\n              ? element.completed === false\n              : element.completed === false\n               && element.title.toLowerCase().includes(query.toLowerCase().trim())\n          );\n        case SortType.Completed:\n          return (\n            query.length === 0\n              ? element.completed === true\n              : element.completed === true\n               && element.title.toLowerCase().includes(query.toLowerCase().trim())\n          );\n        default:\n\n          return element.title.toLowerCase().includes(query.toLowerCase().trim());\n      }\n    }),\n    [todos, query, cases],\n  );\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter\n                setCurrentCase={setCurrentCase}\n                setCurrentQuery={setCurrentQuery}\n                cases={cases}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={visibleTodos}\n                    setButton={setButton}\n                    setTodo={setTodo}\n                    listButton={listButton}\n                    setListButton={setListButton}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {button && (\n        <TodoModal\n          setButton={setButton}\n          title={todo.title}\n          completed={todo.completed}\n          userId={todo.userId}\n          id={todo.id}\n          setListButton={setListButton}\n        />\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ninterface Props {\n  setButton: (trueOrFalse: boolean) => (void)\n  setListButton: (trueOrFalse: boolean) => (void)\n  title: string,\n  completed: boolean,\n  userId: number,\n  id: number,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  setButton,\n  title,\n  setListButton,\n  completed,\n  userId,\n  id,\n}) => {\n  const [user, setUser]\n  = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [isLoading, setLoading] = useState(true);\n\n  useEffect(() => {\n    async function getTodo() {\n      const fetchedData = await getUser(userId);\n\n      setUser(fetchedData);\n      setLoading(false);\n    }\n\n    getTodo();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  setButton(false);\n                  setListButton(false);\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p\n                className={completed\n                  ? 'has-text-success block'\n                  : 'has-text-danger block'}\n                data-cy=\"modal-title\"\n              >\n                {title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={user.email}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}