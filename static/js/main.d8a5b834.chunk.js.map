{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","setButton","setTodoObj","className","map","todo","completed","id","title","type","onClick","TodoFilter","setCurrentCase","cases","setCurrentQuery","query","value","onChange","event","target","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getTodos","getUser","userId","TodoModal","todoObj","useState","name","email","phone","user","setUser","isLoading","setLoading","useEffect","a","fetchedData","getTodo","href","App","setTodos","setCase","setQuery","button","array","filter","toLowerCase","includes","trim","length","currentCase","currentQuery","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8a5b834.chunk.js","sourcesContent":["import React from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n\n  setButton: (trueOrFalse: boolean) => (void),\n\n  setTodoObj: (obj: Todo) => (void)\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos = [],\n  setButton,\n  setTodoObj,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map((todo) => {\n          return (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className={todo.completed\n                ? ''\n                : 'has-background-info-light'}\n            >\n              <td className=\"is-vcentered\">\n                {todo.id}\n              </td>\n              { todo.completed\n                ? (\n                  <td className=\"is-vcentered\">\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  </td>\n                )\n                : <td className=\"is-vcentered\" />}\n\n              <td className=\"is-vcentered is-expanded\">\n                <p className={todo.completed\n                  ? 'has-text-success'\n                  : 'has-text-danger'}\n                >\n                  {todo.title}\n\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => {\n                    setButton(true);\n                    setTodoObj(todo);\n                  }}\n                >\n                  <span className=\"icon\">\n                    <i className=\"far fa-eye\" />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\n\ninterface Props {\n  setCurrentCase: (tabId: string)=> void,\n  setCurrentQuery: (tabId: string)=> void,\n  cases: string,\n  query: string,\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  setCurrentCase,\n  cases,\n  setCurrentQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={cases}\n            data-cy=\"statusSelect\"\n            onChange={(event) => {\n              setCurrentCase(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => {\n            setCurrentQuery(event.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setCurrentQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  setButton: (trueOrFalse: boolean) => (void)\n  todoObj: Todo,\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  setButton,\n  todoObj,\n}) => {\n  const [user, setUser]\n  = useState<User>({\n    id: 0,\n    name: '',\n    email: '',\n    phone: '',\n  });\n  const [isLoading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    async function getTodo() {\n      const fetchedData = await getUser(todoObj.userId);\n\n      setUser(fetchedData);\n      setLoading(false);\n    }\n\n    getTodo();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n      {isLoading\n        ? (<Loader />)\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {todoObj.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => setButton(false)}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p\n                className={todoObj.completed\n                  ? 'has-text-success block'\n                  : 'has-text-danger block'}\n                data-cy=\"modal-title\"\n              >\n                {todoObj.title}\n              </p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {todoObj.completed\n                  ? <strong className=\"has-text-success\">Done</strong>\n                  : <strong className=\"has-text-danger\">Planned</strong>}\n\n                {' by '}\n\n                <a href={user.email}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos]\n   = useState<Todo[]>([]);\n  const [isLoading, setLoading] = useState<boolean>(true);\n  const [cases, setCase] = useState('');\n  const [query, setQuery] = useState('');\n  const [button, setButton] = useState(false);\n  const [todoObj, setTodoObj] = useState(todos[0]);\n  let array = todos;\n\n  useEffect(() => {\n    async function getTodo() {\n      const fetchedData = await getTodos();\n\n      setTodos(fetchedData);\n      setLoading(false);\n    }\n\n    getTodo();\n  }, []);\n\n  const setCurrentCase = (currentCase: string) => {\n    setCase(currentCase);\n  };\n\n  const setCurrentQuery = (currentQuery: string) => {\n    setQuery(currentQuery);\n  };\n\n  switch (cases) {\n    case 'all':\n      array = todos.filter((todo) => {\n        return todo.title.toLowerCase().includes(query.toLowerCase().trim());\n      });\n      break;\n    case 'active':\n      array = todos.filter((todo) => {\n        return (\n          query.length === 0\n            ? todo.completed === false\n            : todo.completed === false\n             && todo.title.toLowerCase().includes(query.toLowerCase().trim())\n        );\n      });\n      break;\n    case 'completed':\n      array = todos.filter((todo) => {\n        return (\n          query.length === 0\n            ? todo.completed === true\n            : todo.completed === true\n             && todo.title.toLowerCase().includes(query.toLowerCase().trim())\n        );\n      });\n      break;\n    default:\n      array = todos.filter((todo) => {\n        return todo.title.toLowerCase().includes(query.toLowerCase().trim());\n      });\n      break;\n  }\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n            <div className=\"block\">\n              <TodoFilter\n                setCurrentCase={setCurrentCase}\n                setCurrentQuery={setCurrentQuery}\n                cases={cases}\n                query={query}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={array}\n                    setButton={setButton}\n                    setTodoObj={setTodoObj}\n                  />\n                )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n      {button && (\n        <TodoModal\n          setButton={setButton}\n          todoObj={todoObj}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}